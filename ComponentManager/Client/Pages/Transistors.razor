@page "/transistors"
@using ComponentManager.Shared
@inject HttpClient Http

<PageTitle>Transistors</PageTitle>

<Part Uri="Transistor"
      Title="Transistors"
      Paging="PagingInfo"
      Items="Items"
      OnLoad=LoadData>
    
    <TableHeader Context="table">
        <th @onclick='()=>table.Sort("Name")'>Name</th>
        <th @onclick='()=>table.Sort("UMax")'>U<sub>max</sub></th>
        <th></th>
    </TableHeader>

    <RowTemplate Context="tor">
        <td>@tor.Name</td>
        <td>@tor.UMax</td>
        <td><button type="button" class="btn btn-primary" @onclick="() => EditComponent(tor)">Edit</button></td>
    </RowTemplate>

    <EditTemplate>
        <Modal @ref="Modal">
            <div class="modal-header">
                @EditTransistor.Name
            </div>
            <div class="modal-body">
                <EasyInput Name="Name" Item="EditTransistor.Name"/>
                <EasyInput Name="Umax" Item="EditTransistor.UMax"/>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" @onclick="() => EditModalSave()">Save changes</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="() => EditModalCancel()">Close</button>
            </div>
        </Modal>

        <button type="button" class="btn btn-primary" @onclick="() => CreateComponent()">Open Modal</button>

    </EditTemplate>
</Part>



@code {
    private Modal Modal { get; set; }
    private PagingInfo PagingInfo { get; set; }
    private Transistor[] Items { get; set; }
    private Transistor EditTransistor { get; set; } = new Transistor() { Name = "" };

    protected async Task LoadData(string uri)
    {
        var response = await Http.GetFromJsonAsync<PagingInfo<Transistor>>(uri);
        PagingInfo = response;
        Items = response.Data;
    }

    private async Task CreateComponent()
    {
        EditTransistor = new Transistor() 
        { 
            Name = "New transistor" 
        };
        Modal.Open();
    }

    private async Task EditComponent(Transistor tor)
    {
        EditTransistor = tor;
        Modal.Open();
    }

    private async Task EditModalSave()
    {
        //Save
        Modal.Close();
    }

    private async Task EditModalCancel()
    {
        Modal.Close();
    }

}

