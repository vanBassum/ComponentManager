@page "/transistors"
@using ComponentManager.Shared
@using System.Text.Json
@using System.Text
@inject HttpClient Http

<PageTitle>Transistors</PageTitle>

<Part Title="Transistors"
      Paging=TransistorList
      OnPageRequested="(a)=>RequestPage(a)"> 
    



    
@if (TransistorList == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th></th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in TransistorList.Data)
            {
                <tr>
                    <td>@item</td>
                    <td></td>
                    <td></td>
                    <td></td>
                </tr>
            }
        </tbody>
    </table>
}








</Part>



@code {

    private PagingInfo<string> TransistorList { get; set; }

    protected override async Task OnInitializedAsync()
    {
        //var request = new HttpRequestMessage(HttpMethod.Get, "Transistor");
        //var body = new { Page=1, Size=5 };
        //request.Content = new StringContent(JsonSerializer.Serialize(body), Encoding.UTF8, "application/json");
        //using var response = await HttpClient.SendAsync(request);
        //Transitors =  await response.Content.ReadFromJsonAsync<Transistor[]>();


        TransistorList = await Http.GetFromJsonAsync<PagingInfo<string>>("Transistor");

    }


    protected async Task RequestPage(int page)
    {
        PagingInfo paging = TransistorList;
        paging.CurrentPage = page;

        HttpClient client = new HttpClient();
        var json = JsonSerializer.Serialize(paging);
        var request = new HttpRequestMessage
        {
            Method = HttpMethod.Get,
            RequestUri = new Uri("Transistor"),
            Content = new StringContent(json, Encoding.UTF8, "application/json")
        };
 
        var response = client.SendAsync(request).ConfigureAwait(false);
        var responseInfo = response.GetAwaiter().GetResult();


        string arg = JsonSerializer.Serialize(paging);
        TransistorList = await Http.GetFromJsonAsync<PagingInfo<string>>($"Transistor/{arg}");
    }


    //private WeatherForecast[]? forecasts;
    //
    //protected override async Task OnInitializedAsync()
    //{
    //    forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("WeatherForecast");
    //}







}

