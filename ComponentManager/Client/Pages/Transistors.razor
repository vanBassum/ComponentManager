@page "/transistors"
@using ComponentManager.Shared
@using Microsoft.AspNetCore.WebUtilities
@inject HttpClient Http

<PageTitle>Transistors</PageTitle>

<Part Uri="Transistor"
      Title="Transistors"
      Paging="PagingInfo"
      Items="Items"
      OnLoad=LoadData>
    
    <TableHeader Context="table">
        <th @onclick='()=>table.Sort("Name")'>Name</th>
        <th @onclick='()=>table.Sort("UMax")'>U<sub>Max</sub></th>
        <th></th>
    </TableHeader>

    <RowTemplate Context="tor">
        <td>@tor.Name</td>
        <td>@tor.UMax</td>
        <td><button type="button" class="btn btn-primary" @onclick="() => EditComponent(tor)">Edit</button></td>
    </RowTemplate>

    <EditTemplate>
        <Modal @ref="Modal">
            <div class="modal-header">
                @EditTransistor.Name
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <div class="row mb-3">
                        <div class="col-sm-3"><h6>Name</h6></div>
                        <div class="col-sm-9"><input class="form-control" @bind="EditTransistor.Name" /></div>
                    </div>
                </div>
                 <div class="form-group">
                    <div class="row mb-3">
                        <div class="col-sm-3"><h6>U<sub>Max</sub></h6></div>
                        <div class="col-sm-9"><input class="form-control" @bind="EditTransistor.UMax" /></div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal" @onclick="() => EditModalDelete()">Delete</button>
                <button type="button" class="btn btn-primary" @onclick="() => EditModalSave()">Save changes</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="() => EditModalCancel()">Close</button>
            </div>
        </Modal>
        <button type="button" class="btn btn-light" @onclick="() => CreateComponent()">Open Modal</button>
    </EditTemplate>
</Part>



@code {
    private Modal Modal { get; set; }
    private PagingInfo PagingInfo { get; set; }
    private Transistor[] Items { get; set; }
    private Transistor EditTransistor { get; set; }

    protected async Task LoadData(string uri)
    {
        var response = await Http.GetFromJsonAsync<PagingInfo<Transistor>>(uri);
        PagingInfo = response;
        Items = response.Data;
    }

    private async Task CreateComponent()
    {
        EditTransistor = new Transistor() 
        { 
            Id=0,
            Name = "New transistor" 
        };
        Modal.Open();
    }

    private async Task EditComponent(Transistor tor)
    {
        EditTransistor = tor;
        Modal.Open();
    }

    private async Task EditModalSave()
    {
        if(EditTransistor.Id == 0)
            await Http.PostAsJsonAsync("Transistor", EditTransistor);
        else
            await Http.PutAsJsonAsync("Transistor", EditTransistor);
        Modal.Close();
    }

    private async Task EditModalCancel()
    {
        Modal.Close();
    }

    private async Task EditModalDelete()
    {
        await Delete(EditTransistor.Id);
        Modal.Close();
    }

    private async Task Delete(int id)
    {
        var queryParams = new Dictionary<string, string>
        {
            ["id"] = id.ToString()
        };
        var query = QueryHelpers.AddQueryString("Transistor", queryParams);
        await Http.DeleteAsync(query);
    }
}

