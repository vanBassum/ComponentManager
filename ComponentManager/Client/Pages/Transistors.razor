@page "/transistors"
@using ComponentManager.Shared
@using Microsoft.AspNetCore.WebUtilities
@inject HttpClient Http

<PageTitle>Transistors</PageTitle>

<Part @ref="part"
      Uri="Transistor"
      Title="Transistors"
      Paging="PagingInfo"
      Items="Items"
      TItem="Transistor"
      OnLoad=LoadData
      OnSaveItem=SaveItem
      OnDeleteItem=DeleteItem>
    
    <TableHeader Context="table">
        <th @onclick='()=>table.Sort("Name")'>Name</th>
        <th @onclick='()=>table.Sort("UMax")'>U<sub>Max</sub></th>
        <th></th>
    </TableHeader>

    <RowTemplate Context="tor">
        <td>@tor.Name</td>
        <td>@tor.UMax</td>
        <td><button type="button" class="btn btn-light" @onclick="() => part.EditComponent(tor)">Edit</button></td>
    </RowTemplate>

    <EditTemplate>
        <div class="form-group">
            <div class="row mb-3">
                <div class="col-sm-3"><h6>Name</h6></div>
                <div class="col-sm-9"><input class="form-control" @bind="context.Name" /></div>
            </div>
        </div>
        <div class="form-group">
            <div class="row mb-3">
                <div class="col-sm-3"><h6>U<sub>Max</sub></h6></div>
                <div class="col-sm-9"><input class="form-control" @bind="context.UMax" /></div>
            </div>
        </div>
    </EditTemplate>
</Part>



@code {
    private Part<Transistor> part;
    private PagingInfo PagingInfo { get; set; }
    private Transistor[] Items { get; set; }

    private async Task LoadData(string uri)
    {
        var response = await Http.GetFromJsonAsync<PagingInfo<Transistor>>(uri);
        PagingInfo = response;
        Items = response.Data;
    }


    private async Task SaveItem(Transistor tor)
    {
        if(tor.Id == 0)
            await Http.PostAsJsonAsync("Transistor", tor);
        else
            await Http.PutAsJsonAsync("Transistor", tor);

    }

    private async Task DeleteItem(Transistor tor)
    {
        var queryParams = new Dictionary<string, string>
        {
            ["id"] = tor.Id.ToString()
        };
        var query = QueryHelpers.AddQueryString("Transistor", queryParams);
        await Http.DeleteAsync(query);
    }

}

